[include mainsail.cfg]
[include homing.cfg]
[include macros.cfg]
[include bedfans.cfg]
[include stealthchanger/toolchanger-include.cfg]

[exclude_object]

# This file contains common pin mappings for the BigTreeTech Kraken.
# To use this config, the firmware should be compiled for the STM32H723Z6 with a "128KiB bootloader"
# Enable "extra low-level configuration options" and select the "25MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the Kraken with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech Kraken

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Hotend heater pin                    [extruder] section
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Stepper Z1 enable pin                [stepper_z1] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls /dev/serial/by-id/*" then unplug to verify
##--------------------------------------------------------------------
canbus_uuid: 3a2a8ea946be
#restart_method: command
##--------------------------------------------------------------------

[mcu rpi]
serial: /tmp/klipper_host_mcu

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20
accel_per_hz: 100
sweeping_accel: 400
sweeping_period: 0

[printer]
kinematics: corexy
max_velocity: 1000  
max_accel: 20000             #Max 4000
max_z_velocity: 350          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 2000
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  A1 Stepper (Motor S1) - X0 - Back Right
[stepper_x]
step_pin: PC14
dir_pin: !PC13
enable_pin: !PE6
rotation_distance: 40
microsteps = 32
full_steps_per_rotation = 200
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 60
endstop_pin = tmc5160_stepper_x:virtual_endstop
homing_positive_dir: true
homing_retract_dist: 0

[tmc5160 stepper_x]
cs_pin: PD6
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 1.5
stealthchop_threshold: 0
##  sensorless homing
diag1_pin: ^!PC15
driver_sgt:1

##  B2 Stepper (Motor S4) - X1 - Front Left
[stepper_x1]
step_pin: PB9
dir_pin: !PB8
enable_pin: !PB7
rotation_distance: 40
microsteps = 32
full_steps_per_rotation = 200
#endstop_pin = tmc5160_stepper_x1:virtual_endstop

[tmc5160 stepper_x1]
cs_pin: PD3
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 1.5
stealthchop_threshold: 0
##  sensorless homing
#diag1_pin: PF2
driver_sgt:1

## B1 Stepper (Motor S3) - Y0 - Back Left
[stepper_y]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE0
rotation_distance: 40
microsteps = 32
full_steps_per_rotation = 200
position_min = -5
position_endstop = 350
position_max = 350
homing_speed = 60
endstop_pin = tmc5160_stepper_y:virtual_endstop
homing_positive_dir: true
homing_retract_dist: 0

[tmc5160 stepper_y]
cs_pin: PD4
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 1.5
stealthchop_threshold: 0
##  sensorless homing
diag1_pin: ^!PF1
driver_sgt:1

## A2 Stepper (Motor S2) - Y1 - Front Right
[stepper_y1]
step_pin: PE5
dir_pin: !PE4
enable_pin: !PE3
rotation_distance: 40
microsteps = 32
full_steps_per_rotation = 200
#endstop_pin = tmc5160_stepper_y1:virtual_endstop

[tmc5160 stepper_y1]
cs_pin: PD5
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 1.5
stealthchop_threshold: 0
##  sensorless homing
#diag1_pin: PF0
driver_sgt:3
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to Motor_5-S5
##  Endstop connected to MIN3
[stepper_z]
step_pin: PG9
dir_pin: !PG10
enable_pin: !PG13
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 210

##  Uncomment below for 300mm build
#position_max: 260

##  Uncomment below for 350mm build
position_max: 310

##--------------------------------------------------------------------
position_min: -5
homing_speed: 20
second_homing_speed: 3
homing_retract_dist: 3

##  TMC2160 configuration
[tmc5160 stepper_z]
cs_pin: PD2
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to Motor_6-S6
[stepper_z1]
step_pin: PG11
dir_pin: PD7
enable_pin: !PG12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  TMC2160 configuration
[tmc5160 stepper_z1]
cs_pin: PA15
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to Motor_7-S7
[stepper_z2]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  TMC2160 configuration
[tmc5160 stepper_z2]
cs_pin: PA9
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to Motor_8-S8
[stepper_z3]
step_pin: PG15
dir_pin: PB6
enable_pin: !PG14
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  TMC2160 configuration
[tmc5160 stepper_z3]
cs_pin: PA10
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - THB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
#heater_pin: PF7
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
heater_pin: PF5
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PB0
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769
    
#####################################################################
#   Fan Control
#####################################################################

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PA2
kick_start_time: 0.5
heater: heater_bed

#####################################################################
#   LED Control
#####################################################################

[neopixel umbilical_rgb]
pin: PF11
color_order: GRB
chain_count: 21
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1
initial_WHITE: 0.1

[neopixel chamber]
pin: PF12
chain_count:25
# The number of Neopixel chips that are "daisy chained" to the
# provided pin. The default is 1 (which indicates only a single
# Neopixel is connected to the pin).
color_order: GRB
# Set the pixel order required by the LED hardware. Options are GRB,
# RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

#####################################################################
#   Chamber Thermistor
#####################################################################

[temperature_sensor chamber]
## Chamber Temperature - T1
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PB1
min_temp: 0
max_temp: 100
gcode_id: chamber

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 72000

#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:175,175
#speed:100
#z_hop:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 350
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# Bed Mesh
########################################

[bed_mesh]
speed: 200
horizontal_move_z: 5
mesh_min: 30, 30
mesh_max: 320, 320
probe_count: 6, 6
adaptive_margin: 5

#####################################################################
#   Shaketune
#####################################################################

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

[input_shaper]
shaper_freq_x: 69.8
shaper_type_x: mzv
shaper_freq_y: 47.8
shaper_type_y: mzv
damping_ratio_x: 0.034
damping_ratio_y: 0.053

#####################################################################
#   Axiscope
#####################################################################

[axiscope]
pin: PC0                # Endstop pin
zswitch_x_pos: 267.2     # REQUIRED - X position of the endstop switch
zswitch_y_pos: -1     # REQUIRED - Y position of the endstop switch
zswitch_z_pos: 3        # REQUIRED - Z position of the endstop switch
lift_z: 2                 # OPTIONAL - Amount to lift Z before moving (default: 1)
move_speed: 60            # OPTIONAL - XY movement speed in mm/s (default: 60)
z_move_speed: 10          # OPTIONAL - Z movement speed in mm/s (default: 10)

#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 35.925
#*# pid_ki = 1.254
#*# pid_kd = 257.314
#*#
#*# [extruder]
#*#
#*# [probe]
#*# z_offset = -0.800
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.032500, 0.082500, 0.110000, 0.096250, 0.087500, 0.048750
#*# 	-0.072500, -0.017500, 0.122500, 0.093750, 0.031250, 0.038750
#*# 	-0.037500, -0.005000, 0.083750, 0.068750, 0.000000, 0.022500
#*# 	-0.080000, 0.102500, 0.161250, 0.167500, 0.137500, 0.072500
#*# 	0.081250, 0.148750, 0.226250, 0.243750, 0.217500, 0.181250
#*# 	0.186250, 0.270000, 0.340000, 0.366250, 0.312500, 0.267500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 320.0
#*# min_y = 30.0
#*# max_y = 320.0
#*#
#*# [tool_probe_endstop]
#*# z_offset = -1.000
